{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\home\\controller\\signin.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;qBAIU,W;;gBACE,Q,EAQM,K,EACA,Q,EAWN,Q;;;;;;;mCApBiB,KAAK,OAAL,E;;;AAAjB,oC;;;AAEJ,gCAAI,QAAJ,EAAc;AACV,qCAAK,QAAL,CAAc,UAAd;AACH;;iCAEG,KAAK,MAAL,E;;;;;AAEM,iC,GAAQ,KAAK,IAAL,E;;mCACS,KAAK,KAAL,CAAW,UAAX,EAAuB,KAAvB,CAA6B,KAA7B,EAAoC,IAApC,E;;;AAAjB,oC;;;AAEN,gCAAI,QAAJ,EAAc;AACV,qCAAK,KAAL,CAAW,UAAX,EAAuB,KAAvB,CAA6B,KAA7B,EAAoC,MAApC,CAA2C,EAAC,UAAU,MAAM,QAAN,EAAX,EAA6B,QAAQ,KAAK,EAAL,EAArC,EAA3C;;AAEA,qCAAK,OAAL,CAAa,UAAb,EAAyB,QAAzB;AACH;;6DAEM,KAAK,QAAL,CAAc,UAAd,C;;;AAGP,oC,GAAW;AACX,wCAAQ,EADG;AAEX,gDAAgB;AAFL,6B;;;AAMf,iCAAK,MAAL,CAAY,UAAZ,EAAwB,QAAxB;6DACO,KAAK,OAAL,E;;;;;;;;;;;;;;;;;;;;;;;qBAOL,c;;gBACI,K,EACA,Q,EAGE,Q,EACA,M;;;;;;AALF,iC,GAAQ,KAAK,IAAL,E;;mCACS,KAAK,KAAL,CAAW,UAAX,EAAuB,OAAvB,CAA+B,KAA/B,EAAsC,KAAtC,C;;;AAAjB,oC;;kCACF,SAAS,IAAT,IAAiB,O;;;;;;AAEb,oC,GAAW,EAAC,QAAQ,MAAM,MAAf,EAAuB,gBAAgB,MAAM,cAA7C,E;;mCACI,KAAK,kBAAL,CAAwB,QAAxB,C;;;AAAf,kC;8DAEG,KAAK,OAAL,CAAa,MAAb,EAAqB,KAAK,MAAL,CAAY,eAAZ,CAArB,C;;;8DAGJ,KAAK,IAAL,CAAU,IAAV,EAAgB,KAAK,MAAL,CAAY,cAAZ,CAAhB,C;;;;;;;;;;;;;;;;;;;;;;;qBAOL,e;;gBACI,Q;;;;;;mCAAiB,KAAK,KAAL,CAAW,UAAX,EAAuB,SAAvB,E;;;AAAjB,oC;;mCACA,KAAK,OAAL,CAAa,UAAb,EAAyB,QAAzB,C;;;8DAEC,KAAK,OAAL,CAAa,QAAb,EAAuB,KAAK,MAAL,CAAY,eAAZ,CAAvB,C;;;;;;;;;;;;;;;;;;;;;;;qBAOL,Y;;gBACE,Q;;;;;;mCAAiB,KAAK,OAAL,E;;;AAAjB,oC;;AACJ,gCAAI,QAAJ,EAAc;AACV,qCAAK,OAAL,CAAa,UAAb,EAAyB,IAAzB;AACH;;AAED,iCAAK,QAAL,CAAc,SAAd;;;;;;;;;;;;;;;;;;;;;;;qBAOE,O;;gBACE,Q,EACA,M;;;;;;mCADiB,KAAK,OAAL,CAAa,UAAb,C;;;AAAjB,oC;AACA,kC,GAAS,MAAM,OAAN,CAAc,QAAd,IAA0B,KAA1B,GAAkC,I;8DAExC,M;;;;;;;;;;;;;;;;;;;;;;;qBAQL,kB;+FAAmB,Q;gBAEjB,Q,EAMI,K,EAcF,M,WACC,a,EAGH,U,EACK,G,EACA,E,EACD,G,EAEA,M;;;;;;AA7BJ,oC,GAAW;AACX,0CAAU,EADC;AAEX,0CAAU;AAFC,6B;;;AAKf,gCAAI,MAAM,OAAN,CAAc,QAAd,CAAJ,EAA6B;AACrB,qCADqB,GACb,KAAK,IAAL,MAAe,KAAK,GAAL,EADF;;;AAGzB,2CAAW;AACP,8CAAU,KADH;AAEP,8CAAU;AAFH,iCAAX;AAIH,6BAPD,MAOO;AACH,2CAAW;AACP,8CAAU,SAAS,MADZ;AAEP,8CAAU,SAAS;AAFZ,iCAAX;AAIH;;;mCAGoB,KAAK,KAAL,CAAW,QAAX,EAAqB,MAArB,E;;;AAAf,kC;sCACkB,KAAK,MAAL,CAAY,KAAZ,C;AAAjB,yC,WAAA,a;AAGH,sC,GAAa,E;sEACD,M;;;;;;;;AAAP,+B;AACA,8B,GAAM,OAAO,GAAP,C,CAAN,E;AACD,+B,GAAM,cAAc,OAAd,CAAsB,OAAtB,EAA+B,EAA/B,C;;mCAES,OAAO,OAAP,CAAe,GAAf,EAAoB,QAApB,EAA8B,KAA9B,CAAoC;AAAA,uCAAI,CAAJ;AAAA,6BAApC,C;;;AAAf,kC;;;AAEJ,gCAAI,OAAO,IAAX,EAAiB;AACb,yCAAS,KAAK,KAAL,CAAW,OAAO,IAAlB,CAAT;;AAEA,oCAAI,OAAO,UAAP,IAAqB,CAAzB,EAA4B;AACxB,+CAAW,IAAX,CAAgB;AACZ,8CAAM,OAAO,UADD;AAEZ,6CAAK,OAAO,SAFA;AAGZ,4CAAI;AAHQ,qCAAhB;AAKH,iCAND,MAMO;AACH,+CAAW,IAAX,CAAgB;AACZ,8CAAM,OAAO,UADD;AAEZ,6CAAK,OAAO,SAFA;AAGZ,4CAAI;AAHQ,qCAAhB;AAKH;;AAED,sCAAM,GAAN,CAAU,gBAAgB,EAAhB,GAAqB,KAAK,MAAL,CAAY,cAAZ,CAA/B,EAA4D,SAA5D;AACH,6BAlBD,MAkBO;AACH,2CAAW,IAAX,CAAgB;AACZ,0CAAM,OAAO,IADD;AAEZ,yCAAK,OAAO,IAFA;AAGZ,wCAAI;AAHQ,iCAAhB;;AAMA,sCAAM,GAAN,CAAU,gBAAgB,EAAhB,GAAqB,KAAK,MAAL,CAAY,WAAZ,CAA/B,EAAyD,SAAzD;AACH;;;;;;8DAKE,U;;;;;;;;;;;;;;;;;;EA3Jc,MAAM,UAAN,CAAiB,I",
    "file": "..\\..\\..\\src\\home\\controller\\signin.js",
    "sourcesContent": [
        "'use strict';\r\n\r\nimport request from 'request';\r\n\r\nexport default class extends think.controller.base {\r\n\r\n    async indexAction() {\r\n        let is_login = await this.islogin();\r\n\r\n        if (is_login) {\r\n            this.redirect('/desktop');\r\n        }\r\n\r\n        if (this.isPost()) {\r\n\r\n            const _post = this.post();\r\n            const appusers = await this.model('appusers').where(_post).find();\r\n\r\n            if (appusers) {\r\n                this.model('appusers').where(_post).update({LastTime: think.datetime(), LastIp: this.ip()});\r\n\r\n                this.session('userInfo', appusers);\r\n            }\r\n\r\n            return this.redirect('/desktop');\r\n        }\r\n\r\n        let userInfo = {\r\n            UserId: '',\r\n            RemotePassword: ''\r\n        };\r\n\r\n\r\n        this.assign('userInfo', userInfo);\r\n        return this.display();\r\n    }\r\n\r\n    /*\r\n     * 新用户注册\r\n     *\r\n     * */\r\n    async registerAction() {\r\n        const _post = this.post();\r\n        const appusers = await this.model('appusers').thenAdd(_post, _post);\r\n        if (appusers.type != \"exist\") {\r\n            // 客户端服务器账号同步\r\n            let userInfo = {UserId: _post.UserId, RemotePassword: _post.RemotePassword};\r\n            let result = await this.syncallremoteusers(userInfo);\r\n\r\n            return this.success(result, this.locale('query_success'));\r\n        }\r\n\r\n        return this.fail(5000, this.locale('user_isExist'));\r\n    }\r\n\r\n    /*\r\n     * 自动登录\r\n     *\r\n     * */\r\n    async autologinAction() {\r\n        const appusers = await this.model('appusers').autoLogin();\r\n        await this.session('userInfo', appusers);\r\n\r\n        return this.success(appusers, this.locale('query_success'));\r\n    }\r\n\r\n    /*\r\n     * 退出登录\r\n     *\r\n     * */\r\n    async logoutAction() {\r\n        let is_login = await this.islogin();\r\n        if (is_login) {\r\n            this.session('userInfo', null);\r\n        }\r\n\r\n        this.redirect('/signin');\r\n    }\r\n\r\n    /*\r\n     * 是否已经登陆\r\n     *\r\n     * */\r\n    async islogin() {\r\n        let userInfo = await this.session('userInfo');\r\n        let result = think.isEmpty(userInfo) ? false : true;\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    /*\r\n     * 同步当前用户，用户需要登陆\r\n     *\r\n     * */\r\n    async syncallremoteusers(userInfo) {\r\n\r\n        let formData = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n\r\n        if (think.isEmpty(userInfo)) {\r\n            let _data = this.post() || this.get();\r\n\r\n            formData = {\r\n                username: _data,\r\n                password: _data\r\n            };\r\n        } else {\r\n            formData = {\r\n                username: userInfo.UserId,\r\n                password: userInfo.RemotePassword\r\n            };\r\n        }\r\n\r\n\r\n        const server = await this.model('server').select();\r\n        const {remoteUserUrl} = this.config('api');\r\n\r\n\r\n        let resultData = [];\r\n        for (let key in server) {\r\n            let {ip} = server[key];\r\n            let url = remoteUserUrl.replace('${ip}', ip);\r\n\r\n            let result = await global.request(url, formData).catch(e=> e);\r\n\r\n            if (result.body) {\r\n                result = JSON.parse(result.body);\r\n\r\n                if (result.resultCode == 0) {\r\n                    resultData.push({\r\n                        code: result.resultCode,\r\n                        msg: result.resultMsg,\r\n                        ip: ip\r\n                    });\r\n                } else {\r\n                    resultData.push({\r\n                        code: result.resultCode,\r\n                        msg: result.resultMsg,\r\n                        ip: ip\r\n                    });\r\n                }\r\n\r\n                think.log('客户端服务器账号同步：' + ip + this.locale('sync_success'), 'WARNING');\r\n            } else {\r\n                resultData.push({\r\n                    code: result.code,\r\n                    msg: result.code,\r\n                    ip: ip\r\n                });\r\n\r\n                think.log('客户端服务器账号同步：' + ip + this.locale('sync_fail'), 'WARNING');\r\n            }\r\n\r\n\r\n        }\r\n\r\n        return resultData;\r\n\r\n    }\r\n\r\n}"
    ]
}