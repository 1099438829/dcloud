{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\home\\controller\\proxy.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;qBAOI,W,wBAAY,I,EAAM,CAEjB,C;;qBAEK,Y;;gBACE,Q,EACA,M,EAEA,M;;;;;AAHA,oC,GAAW,yB;AACX,kC,4GAAgH,Q;;mCAEjG,KAAK,IAAL,CAAU,MAAV,EAAkB,KAAlB,CAAwB,UAAC,CAAD,EAAM;AAC7C,uCAAO,CAAP;AACH,6BAFkB,C;;;AAAf,kC;;;AAIJ,gCAAI,MAAM,OAAN,CAAc,MAAd,CAAJ,EAA2B,SAAS,MAAT;;AAG3B,iCAAK,OAAL,CAAa,MAAb,EAAqB,KAAK,MAAL,CAAY,eAAZ,CAArB;;;;;;;;;;;;;;;;;qBAGJ,W,wBAAY,I,EAAM;AACd,YAAI,SAAS,eAAK,YAAL,GAAoB,EAApB,CAAuB,SAAvB,EAAkC,UAAC,GAAD,EAAM,GAAN,EAAa;AACxD,gBAAI,IAAI,cAAI,KAAJ,CAAU,IAAI,GAAd,CAAR;;AAGA,gBAAI,UAAU;AACV,0BAAU,EAAE,QADF;AAEV,sBAAM,EAAE,IAAF,IAAU,EAFN;AAGV,sBAAM,EAAE,IAHE;AAIV,wBAAQ,IAAI,MAJF;AAKV,yBAAS,IAAI;AALH,aAAd;;AAQA,gBAAI,OAAO,eAAK,OAAL,CAAa,OAAb,EAAsB,UAAC,IAAD,EAAS;AACtC,oBAAI,SAAJ,CAAc,KAAK,UAAnB,EAA+B,KAAK,OAApC;AACA,qBAAK,IAAL,CAAU,GAAV;AACH,aAHU,CAAX;;AAKA,iBAAK,EAAL,CAAQ,OAAR,EAAiB,UAAC,CAAD,EAAM;AACnB,oBAAI,GAAJ;AACH,aAFD;;AAIA,gBAAI,IAAJ,CAAS,IAAT;;AAEA,oBAAQ,GAAR,CAAY,OAAZ;AAEH,SAzBY,CAAb;;AA2BA,eAAO,MAAP,CAAc,EAAd,EAAkB,SAAlB;;AAEA,YAAI,aAAa,sEAAjB;AACA,aAAK,IAAL,CAAU,UAAV;AACH,K;;qBAGD,e,8BAAkB;AACd,YAAI,SAAS,cAAI,YAAJ,CAAiB,UAAU,MAAV,EAAkB;AAC5C,oBAAQ,GAAR,CAAY,mBAAZ;;AAEA,mBAAO,KAAP,CAAa,gBAAb;;;AAGA,mBAAO,EAAP,CAAU,MAAV,EAAkB,UAAU,IAAV,EAAgB;AAC9B,wBAAQ,GAAR,CAAY,eAAZ,EAA6B,KAAK,QAAL,EAA7B;AACH,aAFD;AAIH,SAVY,CAAb;;AAYA,eAAO,MAAP,CAAc,IAAd,EAAoB,YAAY;AAC5B,oBAAQ,GAAR,CAAY,eAAZ;AACH,SAFD;AAIH,K;;qBAED,e,8BAAkB;AACd,YAAI,SAAS,cAAI,OAAJ,CAAY,EAAC,MAAM,IAAP,EAAZ,EAA0B,YAAY;AAC/C,oBAAQ,GAAR,CAAY,kBAAZ;AACA,mBAAO,KAAP,CAAa,gBAAb;AACH,SAHY,CAAb;;AAKA,eAAO,EAAP,CAAU,MAAV,EAAkB,UAAU,IAAV,EAAgB;AAC9B,oBAAQ,GAAR,CAAY,OAAZ,EAAqB,KAAK,QAAL,EAArB;AACA,mBAAO,GAAP;AACH,SAHD;;AAKA,eAAO,EAAP,CAAU,KAAV,EAAiB,YAAY;AACzB,oBAAQ,GAAR,CAAY,sBAAZ;AACH,SAFD;AAGH,K;;qBAGD,I,iBAAK,G,EAAK;AAAA,YACC,IADD,2BACC,IADD;;;AAGN,YAAI,KAAK,MAAM,SAAN,CAAgB,IAAhB,CAAT;;AAEA,eAAO,GAAG,GAAH,CAAP;AACH,K",
    "file": "..\\..\\..\\src\\home\\controller\\proxy.js",
    "sourcesContent": [
        "'use strict';\r\n\r\nimport Base from './base.js';\r\nimport child_process from 'child_process';\r\nimport net from 'net';\r\nimport http from 'http';\r\nimport url from 'url';\r\nimport fs from 'fs';\r\n\r\nexport default class extends Base {\r\n    /**\r\n     * index action\r\n     * @return {Promise} []\r\n     */\r\n    indexAction(self) {\r\n\r\n    }\r\n\r\n    async regaddAction() {\r\n        let proxyUrl = 'http://dcloud.stbui.com';\r\n        let cmdStr = `reg add \"HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\" /v AutoConfigURL /d ${proxyUrl} /f >nul`;\r\n\r\n        let result = await this.exec(cmdStr).catch((e)=> {\r\n            return e\r\n        });\r\n\r\n        if (think.isEmpty(result)) result = cmdStr;\r\n\r\n\r\n        this.success(result, this.locale('query_success'));\r\n    }\r\n\r\n    proxyAction(self) {\r\n        let server = http.createServer().on('request', (req, res)=> {\r\n            let u = url.parse(req.url);\r\n\r\n\r\n            let options = {\r\n                hostname: u.hostname,\r\n                port: u.port || 80,\r\n                path: u.path,\r\n                method: req.method,\r\n                headers: req.headers\r\n            };\r\n\r\n            let pReq = http.request(options, (pRes)=> {\r\n                res.writeHead(pRes.statusCode, pRes.headers);\r\n                pRes.pipe(res);\r\n            });\r\n\r\n            pReq.on('error', (e)=> {\r\n                res.end();\r\n            });\r\n\r\n            req.pipe(pReq);\r\n\r\n            console.log(options);\r\n\r\n        });\r\n\r\n        server.listen(88, '0.0.0.0');\r\n\r\n        let pacContent = 'function FindProxyForURL(url, host){return \"PROXY 172.16.97.13:88\";}';\r\n        this.json(pacContent);\r\n    }\r\n\r\n\r\n    tcpserverAction() {\r\n        let server = net.createServer(function (socket) {\r\n            console.log('server connection');\r\n\r\n            socket.write('server success');\r\n            //socket.pipe(socket);\r\n\r\n            socket.on('data', function (data) {\r\n                console.log('server print:', data.toString());\r\n            });\r\n\r\n        });\r\n\r\n        server.listen(8124, function () {\r\n            console.log('server listen');\r\n        });\r\n\r\n    }\r\n\r\n    tcpclientAction() {\r\n        let client = net.connect({port: 8124}, function () {\r\n            console.log('client connected');\r\n            client.write('client success');\r\n        });\r\n\r\n        client.on('data', function (data) {\r\n            console.log('data:', data.toString());\r\n            client.end();\r\n        });\r\n\r\n        client.on('end', function () {\r\n            console.log('client disconnection');\r\n        })\r\n    }\r\n\r\n\r\n    exec(cmd) {\r\n        const {exec} = child_process;\r\n\r\n        let fn = think.promisify(exec);\r\n\r\n        return fn(cmd);\r\n    }\r\n\r\n\r\n}"
    ]
}