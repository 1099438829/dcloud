{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\server.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;qBAQI,W,0BAAc;AACV,YAAI,SAAS,KAAK,KAAL,CAAW,QAAX,EAAqB,MAArB,EAAb;AACA,aAAK,MAAL,CAAY,QAAZ,EAAsB,MAAtB;;AAEA,eAAO,KAAK,OAAL,EAAP;AACH,K;;;;;;;;qBAMD,S,wBAAY;;AAER,YAAI,KAAK,MAAL,EAAJ,EAAmB;AACf,gBAAM,QAAQ,KAAK,IAAL,EAAd;;;AAGA,kBAAM,WAAN,GAAoB,MAAM,IAAN,EAApB;AACA,iBAAK,KAAL,CAAW,QAAX,EAAqB,GAArB,CAAyB,KAAzB;;AAEA,iBAAK,QAAL,CAAc,qBAAd;AACH;;AAED,eAAO,KAAK,OAAL,EAAP;AACH,K;;qBAED,U,yBAAa;AACT,YAAM,OAAO,KAAK,GAAL,EAAb;;AAEA,YAAI,KAAK,MAAL,EAAJ,EAAmB;AACf,gBAAM,QAAQ,KAAK,IAAL,EAAd;;AAEA,gBAAI,CAAC,MAAM,OAAN,CAAc,KAAK,EAAnB,CAAL,EAA6B;AACzB,qBAAK,KAAL,CAAW,QAAX,EAAqB,KAArB,CAA2B,IAA3B,EAAiC,MAAjC,CAAwC,KAAxC;AACH;;AAED,iBAAK,QAAL,CAAc,qBAAd;AACH;;AAED,YAAM,aAAa,KAAK,KAAL,CAAW,QAAX,EAAqB,KAArB,CAA2B,IAA3B,EAAiC,IAAjC,EAAnB;;AAEA,aAAK,MAAL,CAAY,QAAZ,EAAsB,UAAtB;;AAEA,eAAO,KAAK,OAAL,EAAP;AACH,K;;;;;;;;qBAMD,S,wBAAY;AACR,YAAI,OAAO,KAAK,GAAL,EAAX;;AAEA,aAAK,KAAL,CAAW,QAAX,EAAqB,KAArB,CAA2B,IAA3B,EAAiC,MAAjC;;AAEA,aAAK,MAAL,CAAY,QAAZ,EAAsB,OAAtB;AACH,K;;;;;;;;qBAMK,4B;;gBACI,I,EACA,U,EACC,E,EAAG,I,EAGN,G,EACA,U;;;;;;AANE,gC,GAAO,KAAK,GAAL,E;;mCACY,KAAK,KAAL,CAAW,QAAX,EAAqB,KAArB,CAA2B,IAA3B,EAAiC,IAAjC,E;;;AAAnB,sC;AACC,8B,GAAW,U,CAAX,E;AAAG,gC,GAAQ,U,CAAR,I;AAGN,+B,GAAM,YAAY,EAAZ,GAAiB,GAAjB,GAAuB,I;;mCACV,OAAO,OAAP,CAAe,GAAf,EAAoB,KAApB,CAA0B,UAAC,CAAD,EAAM;AACnD,uCAAO,CAAP;AACH,6BAFsB,C;;;AAAnB,sC;;kCAKA,WAAW,IAAX,IAAmB,W;;;;;AACnB,iCAAK,KAAL,CAAW,QAAX,EAAqB,KAArB,CAA2B,IAA3B,EAAiC,MAAjC,CAAwC,EAAC,QAAQ,CAAT,EAAxC;6DACO,KAAK,IAAL,CAAU,KAAK,MAAL,CAAY,YAAZ,CAAV,EAAqC,SAArC,C;;;AAEP,iCAAK,KAAL,CAAW,QAAX,EAAqB,KAArB,CAA2B,IAA3B,EAAiC,MAAjC,CAAwC,EAAC,QAAQ,CAAT,EAAxC;6DACO,KAAK,OAAL,CAAa,SAAb,EAAwB,KAAK,MAAL,CAAY,eAAZ,CAAxB,C",
    "file": "..\\..\\..\\src\\admin\\controller\\server.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport http from 'http';\n\n\nexport default class extends Base {\n    /**\n     * index action\n     * @return {Promise} []\n     */\n    indexAction() {\n        let server = this.model('server').select();\n        this.assign('server', server);\n\n        return this.display();\n    }\n\n    /**\n     * add action\n     * @return {Promise} []\n     */\n    addAction() {\n\n        if (this.isPost()) {\n            const _post = this.post();\n\n            //服务器身份标识\n            _post.accessToken = think.uuid();\n            this.model('server').add(_post);\n\n            this.redirect('/admin/server/index');\n        }\n\n        return this.display();\n    }\n\n    editAction() {\n        const _get = this.get();\n\n        if (this.isPost()) {\n            const _post = this.post();\n\n            if (!think.isEmpty(_get.id)) {\n                this.model('server').where(_get).update(_post);\n            }\n\n            this.redirect('/admin/server/index');\n        }\n\n        const serverData = this.model('server').where(_get).find();\n\n        this.assign('server', serverData);\n\n        return this.display();\n    }\n\n    /*\n     * del action\n     *\n     * */\n    delAction() {\n        let _get = this.get();\n\n        this.model('server').where(_get).delete();\n\n        this.action('server', 'index');\n    }\n\n    /*\n     * 检测客户端服务器运行状态\n     *\n     * */\n    async checkremoteserverstateAction() {\n        const _get = this.get();\n        const serverData = await this.model('server').where(_get).find();\n        const {ip,port} = serverData;\n\n\n        let url = 'http://' + ip + ':' + port;\n        let resultData = await global.request(url).catch((e)=> {\n            return e\n        });\n\n\n        if (resultData.code == 'ETIMEDOUT') {\n            this.model('server').where(_get).update({status: 1});\n            return this.fail(this.locale('query_fail'), undefined);\n        } else {\n            this.model('server').where(_get).update({status: 0});\n            return this.success(undefined, this.locale('query_success'));\n        }\n    }\n\n}"
    ]
}