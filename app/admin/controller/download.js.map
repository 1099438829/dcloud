{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\download.js"
    ],
    "names": [],
    "mappings": "AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;;;qBAIU,Y;;gBACE,Q,EACA,K;;;;;AADA,oC,GAAW,MAAM,SAAN,GAAkB,e;;mCACf,KAAK,KAAL,E;;;AAAd,iC;;;;AAGJ,yCAAG,aAAH,CAAiB,QAAjB,EAA2B,KAA3B,EAAkC,OAAlC;;AAEA,iCAAK,QAAL,CAAc,QAAd,EAAuB,WAAvB;;;;;;;;;;;;;;;;;qBAGE,W;;gBACE,K;;;;;;mCAAc,KAAK,KAAL,E;;;AAAd,iC;8DAEG,KAAK,IAAL,CAAU,KAAV,C;;;;;;;;;;;;;;;;;qBAGL,W;;gBACI,W,EAEF,M;;;;;;mCAFuB,KAAK,KAAL,CAAW,SAAX,EAAsB,KAAtB,CAA4B,EAAC,IAAI,CAAL,EAA5B,EAAqC,IAArC,E;;;AAArB,uC;AAEF,kC,GAAS,KAAK,eAAL,CAAqB;AAC9B,wCAAQ,aAAa,KAAK,IAAL,CAAU,IADD;AAE9B,uCAAO,YAAY,EAFW;AAG9B,yCAAS,EAHqB;AAI9B,yCAAS,YAAY,IAJS;AAK9B,wCAAQ,YAAY,MALU;AAM9B,uCAAO;AANuB,6BAArB,C;8DASN,KAAK,IAAL,CAAU,MAAV,C;;;;;;;;;;;;;;;;;qBAGX,K,oBAAQ;AACJ,YAAM,aAAa,KAAK,KAAL,CAAW,QAAX,EAAqB,IAArB,EAAnB;;AAEA,YAAI,UAAU;AACV,oBAAO,WAAW,MADR;AAEV,oBAAO,0BAFG;AAGV,iBAAI,sBAHM;AAIV,mBAAM;AAJI,SAAd;;AAOA,eAAO,KAAK,eAAL,CAAqB,OAArB,CAAP;AACH,K;;qBAGD,e,4BAAgB,O,EAAS;AAAA,YAChB,MADgB,GACW,OADX,CAChB,MADgB;AAAA,YACT,MADS,GACW,OADX,CACT,MADS;AAAA,YACF,GADE,GACW,OADX,CACF,GADE;AAAA,YACE,KADF,GACW,OADX,CACE,KADF;;;AAIrB,YAAI,uHAMA,MANA,qBAOA,MAPA,01EAwF8B,MAxF9B,2LA4FkD,GA5FlD,aA4F6D,KA5F7D,8fAAJ;;AAqHA,eAAO,GAAP;AACH,K;;qBAED,e,4BAAgB,O,EAAS;AACrB,YAAI,qCAGC,QAAQ,MAHT,oBAIA,QAAQ,KAJR,qzBAuCK,QAAQ,OAvCb,qIAAJ;;AA6CA,eAAO,GAAP;AACH,K",
    "file": "..\\..\\..\\src\\admin\\controller\\download.js",
    "sourcesContent": [
        "'use strict';\n\nimport Base from './base.js';\nimport fs from 'fs';\n\nexport default class extends Base {\n\n    async clientAction() {\n        let filePath = think.ROOT_PATH + '/bin/probe.js';\n        let probe = await this.probe();\n\n        // 生成配置文件\n        fs.writeFileSync(filePath, probe, 'utf-8');\n\n        this.download(filePath,'probe.asp');\n    }\n\n    async probeAction() {\n        let probe = await this.probe();\n\n        return this.json(probe);\n    }\n\n    async shellAction() {\n        const programData = await  this.model('program').where({id: 2}).find();\n\n        let buffer = this.getShellContent({\n            domain: 'http://:' + this.http.host,\n            appid: programData.id,\n            appName: '',\n            appPath: programData.path,\n            appUrl: programData.config,\n            proxy: false\n        });\n\n        return this.json(buffer);\n    }\n\n    probe() {\n        const configData = this.model('config').find();\n\n        let options = {\n            apiKey:configData.apiKey,\n            domain:'http://172.16.97.13:8361',\n            url:'http://www.baidu.com',\n            param:''\n        };\n\n        return this.getProbeContent(options);\n    }\n\n\n    getProbeContent(options) {\n        let {apiKey,domain,url,param} = options;\n\n\n        let str = `\n<%@LANGUAGE=\"VBSCRIPT\" CODEPAGE=\"65001\"%>\n<%\nResponse.CharSet= \"UTF-8\"\n\ndim apiKey, domain\napiKey = \"${apiKey}\"\ndomain = \"${domain}\"    'http://172.16.97.13:8361/api/applog\n\ndim shellName, shellPath\n\n\ndim key, username, password, appId\n\nkey = request.QueryString(\"key\")\nusername = request.QueryString(\"username\")\npassword = request.QueryString(\"password\")\nshellName = request.QueryString(\"shellName\")\nshellPath = request.QueryString(\"shellPath\")\nappId = request.QueryString(\"appId\")\n\nif apiKey <> \"\" and key = apiKey and username <> \"\" then\n    setUserPassword username,password\n    if err <> 0 then\n        response.write \"{\"\"resultCode\"\":\"\"5000\"\",\"\"resultMsg\"\":\"\"注册失败\"\"}\"\n    else\n        response.write \"{\"\"resultCode\"\":\"\"0\"\",\"\"resultMsg\"\":\"\"注册成功\"\"}\"\n    end if\n\nelseif appid <> \"\" then\n    response.write file_get_contents(domain&\"?userId=\"&username&\"&appId=\"&appid, \"userId=\"&username&\"&appId=\"&appid)\n\nelseif shellName <> \"\" and shellPath <> \"\" then\n    shell_content shellName,shellPath\n    response.write \"{\"\"resultCode\"\":\"\"0\"\",\"\"resultMsg\"\":\"\"创建成功\"\"}\"\nelse\n    response.write \"{\"\"resultCode\"\":\"\"5000\"\",\"\"resultMsg\"\":\"\"校验失败\"\"}\"\nend if\n\nfunction setUserPassword(username, password)\n    On Error Resume Next\n    dim oSystem,oUser,oGroup\n\n    Set oSystem=GetObject(\"WinNT://127.0.0.1\")\n\n    Set oUser=oSystem.GetObject(\"user\",username)\n\n    if err <> 0 then\n        err = 0\n        Set oUser=oSystem.Create(\"user\",username)\n        oUser.SetPassword password\n        oUser.Put \"userFlags\", &h10040\n        oUser.Setinfo\n\n        Set oGroup=oSystem.GetObject(\"Group\",\"Users\")\n        oGroup.Add (\"winnt://\"&username)\n    else\n        oUser.SetPassword password\n        oUser.Setinfo\n    end if\nend function\n\nFunction file_get_contents(url,data)\n Dim objXML:Set   objXML   =   server.CreateObject( \"Microsoft.XMLHTTP\")\n\t'objXML.open   \"GET \",   url,   False\n\tobjXML.open   \"POST\",   url,   False\n\tobjXML.send(data)\n\tIf objXml.Readystate=4 Then\n\t file_get_contents=     objXML.responSetext\n\tElse\n\t file_get_contents=0\n\tEnd If\n Set objXML=Nothing\nEnd Function\n\nFunction shell_content(name, path)\n    dim fileName\n    dim content\n\n    fileName = name&\".bat\"\n\n\n    content =\":: Author:  dCloud <bright>\"&vbcrlf\n    content =content&\":: WebSite:  http://dcloud.stbui.com\"&vbcrlf\n    content =content&\":: 2016.06.30\"&vbcrlf\n    content =content&\" \"&vbcrlf\n    content =content&\" \"&vbcrlf\n\n    content =content&\"set f2etestDomain=${domain}\"&vbcrlf\n    content =content&\"set appid=ie6\"&vbcrlf\n    content =content&\"\"&vbcrlf\n    content =content&\"\"&vbcrlf\n    content =content&\"start /MAX \"\"\"\" \"&\"\"\"\"&path&\"\"\"\" &\" \"\"${url}\"\" \"\"${param}\"\" \"&vbcrlf\n    content =content&\"\"&vbcrlf\n    content =content&\"\"&vbcrlf\n\n    CreateFile fileName, content\nend Function\n\nFunction CreateFile(FileName,Content)\n    on error resume next\n\n    FileName=Server.Mappath(FileName)\n    Set FSO = Server.CreateObject(\"Scripting.FileSystemObject\")\n    set fd=FSO.createtextfile(FileName,true)\n    fd.writeline Content\n\n    if err>0 then\n      err.clear\n      CreateFile=False\n    else\n      CreateFile=True\n    end if\nEnd function\n%>\n        `;\n\n        return str;\n    }\n\n    getShellContent(options) {\n        let str = `\n@echo off\n\nset domain=${options.domain}\nset appid=${options.appid}\n\nrem 命令行参数\nset proxymode=\"%1\"\nset proxyurl=%2\nset url=%3\nset apiKey=%4\n\nrem 探测桌面模式\nset isWeb=1\nif %url% equ desktop (\n\tset url=\"about:blank\"\n\tset isWeb=0\n)\n\nrem 设置代理\nset proxypath=\"HKCU\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\"\nreg add %proxypath% /v \"ProxyEnable\" /t REG_DWORD /d 0 /f>nul\nset proxydef=\nif %proxyurl% equ \"\" set proxydef=1\nif %proxyurl% equ default set proxydef=1\nif %proxyurl% equ \"default\" set proxydef=1\nif defined proxydef set proxyurl=\"http://%domain%/getHostsPac?name=%USERNAME%\"\nif %proxymode% equ \"noproxy\" (\n\tset proxyurl=\"\"\n)\nif %proxyurl% neq \"\" (\n\trem 开启代理\n\treg add %proxypath% /v \"AutoConfigURL\" /d %proxyurl% /f >nul\n) else (\n\trem 关闭代理\n\treg delete %proxypath% /v \"AutoConfigURL\" /f > nul\n)\n\nrem 打开应用\nstart /MAX \"\" \"${options.appPath}\" %url% %proxyParam%\n\nrem 打点统计\nstart \"\" curl \"http://%domain%/applog?userid=%USERNAME%&appid=%appid%&isweb=%isWeb%\"\n        `;\n\n        return str;\n    }\n\n}"
    ]
}