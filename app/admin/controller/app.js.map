{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\app.js"
    ],
    "names": [],
    "mappings": "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",
    "file": "..\\..\\..\\src\\admin\\controller\\app.js",
    "sourcesContent": [
        "'use strict';\r\n\r\nimport Base from './base.js';\r\nimport request from 'request';\r\n\r\nexport default class extends Base {\r\n    /**\r\n     * index action\r\n     * @return {Promise} []\r\n     */\r\n    async indexAction() {\r\n        let program = await this.model('program').getList();\r\n\r\n        this.assign('app', program);\r\n\r\n        return this.display();\r\n    }\r\n\r\n    addAction() {\r\n        if (this.isPost()) {\r\n            const data = this.post();\r\n            this.model('program').add(data);\r\n        }\r\n\r\n        return this.display();\r\n    }\r\n\r\n    async editAction() {\r\n        const _get = this.get();\r\n        const _post = this.post();\r\n\r\n        let programData, serverData;\r\n\r\n\r\n        if (this.isPost()) {\r\n            this.model('program').where(_get).update(_post);\r\n\r\n            // �ڿͻ��˷���������bat�ļ�\r\n            let options = _post;\r\n            //options = {name: 3, path: 3, ip: 4};\r\n\r\n            programData = await this.model('program').getSingleList({'program.id': _get.id});\r\n            options.name = _get.id;\r\n            options.ip = programData.serverIp;\r\n\r\n            let result = await this.remoteServerCreateFile(options);\r\n\r\n            this.redirect('/admin/app/index');\r\n        }\r\n\r\n        programData = await this.model('program').getSingleList({'program.id': _get.id});\r\n        this.assign('app', programData);\r\n\r\n        serverData = await this.model('server').select();\r\n        this.assign('server', serverData);\r\n\r\n        return this.display();\r\n    }\r\n\r\n    delAction() {\r\n        return this.display();\r\n    }\r\n\r\n    async shownAction() {\r\n        const _get = this.get();\r\n\r\n        const programData = this.model('program');\r\n        const row = await programData.where({id: _get.id}).find();\r\n\r\n        if (row.status == 1) {\r\n            await programData.where({id: _get.id}).update({status: 0});\r\n        } else {\r\n            await programData.where({id: _get.id}).update({status: 1});\r\n        }\r\n\r\n        return this.success(row)\r\n    }\r\n\r\n    async proxyAction() {\r\n        const _get = this.get();\r\n\r\n        const programData = this.model('program');\r\n        const row = await programData.where({id: _get.id}).find();\r\n\r\n        if (row.proxy == 1) {\r\n            await programData.where({id: _get.id}).update({proxy: 0});\r\n        } else {\r\n            await programData.where({id: _get.id}).update({proxy: 1});\r\n        }\r\n\r\n        return this.success(row)\r\n    }\r\n\r\n    async remoteservercreatefileAction() {\r\n        const _get = this.get();\r\n        const _post = this.post();\r\n\r\n        let options = {id: 2, name: 3, path: 3, ip: 4};\r\n\r\n        if (think.isEmpty(_post)) {\r\n            options = _post;\r\n        }\r\n\r\n        options = _get;\r\n\r\n        let programData = await this.model('program').getSingleList({'program.id': options.id});\r\n\r\n        options.ip = programData.serverIp;\r\n\r\n        let result = await this.remoteServerCreateFile(options);\r\n\r\n        this.json(result);\r\n    }\r\n\r\n    remoteServerCreateFile(options) {\r\n        // �ڿͻ��˷����������ļ�\r\n        // http://xxx/setuser.asp?shellName=ie&shellPath=c:\\\\2.bat\r\n        let {name,path,ip} = options;\r\n\r\n        name = name.replace(/\\s+/g, '');\r\n\r\n        let url = 'http://' + ip + '/setuser.asp?shellName=' + encodeURIComponent(name) + '&shellPath=' + encodeURIComponent(path);\r\n        const result = this.getApiData(url);\r\n\r\n        return result;\r\n    }\r\n\r\n    getApiData(url) {\r\n        let fn = think.promisify(request.get);\r\n        return fn({url: url});\r\n    }\r\n}"
    ]
}